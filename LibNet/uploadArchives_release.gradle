//apply plugin: 'maven'
//uploadArchives{
//    repositories {
//        mavenDeployer{
//            //存放库的maven地址
//            repository(url : 'http://10.25.84.18:8089/nexus/content/repositories/ANDROID-RELEASE/'){
//              //repository(url : 'http://10.25.84.18:8089/nexus/content/repositories/Android-Release/'){
//                authentication(userName : 'admin', password : 'admin123')
//            }
//
//            pom.project{
//                groupId "com.pasc.lib"
//                artifactId "net"
//                version rootProject.ext.aarLibNetVersion
//                packaging "aar"
//            }
//        }
//    }
//
//}

apply plugin: 'maven'
apply plugin: 'signing'

configurations {
    deployerJars
}

repositories {
    mavenCentral()
}

// 判断版本是Release or Snapshots
def isReleaseBuild() {
    return !VERSION.contains("SNAPSHOT");
}

// 获取仓库url
def getRepositoryUrl() {
    return isReleaseBuild() ? RELEASE_URL : SNAPSHOT_URL;
}

// type显示指定任务类型或任务, 这里指定要执行Javadoc这个task,这个task在gradle中已经定义
task androidJavadocs(type: Javadoc) {
    // 设置源码所在的位置
    source = android.sourceSets.main.java.sourceFiles
}

// 生成javadoc.jar
task androidJavadocsJar(type: Jar) {
    // 指定文档名称
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

// 生成sources.jar
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

// 产生相关配置文件的任务
artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}

//uploadArchives {
//    repositories {
//        mavenDeployer {
//            beforeDeployment {
//                MavenDeployment deployment -> signing.signPom(deployment)
//            }
//
//            pom.version = VERSION
//            pom.artifactId = ARTIFACT_ID
//            pom.groupId = GROUP_ID
//            pom.packaging = TYPE
//            pom.description = DESCRIPTION
//            repository(url:"file:///Users/yan/.m2/repository/org") {
//                authentication(userName: NAME, password: PASSWORD) // maven授权信息
//            }
//        }
//    }
//}



//// 唯一标识
//def GROUP_ID = "com.gitee.AndroidLee0316"
//// 项目名称
//def ARTIFACT_ID = "zxs_net"
//// 版本号
//def VERSION = "1.0.0"
//
//group GROUP_ID  //一定要加入，否者发布编译时报错
//version VERSION

//task generateSourcesJar(type: Jar) {
//    from android.sourceSets.main.java.srcDirs
//    classifier 'sources'
//}
//afterEvaluate {
//    publishing {
//        publications {
//            // 定义一个名为 Production 的发布
//            release(MavenPublication) {
//
//                groupId GROUP_ID
//                artifactId ARTIFACT_ID
//                version VERSION
////             必须有这个 否则不会上传AAR包
//                afterEvaluate { artifact(tasks.getByName("bundleReleaseAar")) }
//                // 上传source，这样使用方可以看到方法注释
//                artifact generateSourcesJar
////            artifact "$buildDir/outputs/aar/${project.getName()}-debug.aar" //要上传的aar路径
//            }
//        }
//    }
//}




uploadArchives { //新增 ，由于Android Studio gradle 支持maven插件，因此能够添加此task
    configuration = configurations.archives
    repositories {
        mavenDeployer {
            snapshotRepository(url: "file:///Users/Administrator/.m2/repository/org") {
                authentication(userName: NAME, password: PASSWORD)
            }

            //file:///Users/yan/.m2/repository/org
            repository(url: "file:///Users/Administrator/.m2/repository/org") {
                authentication(userName: NAME, password: PASSWORD)
            }

            pom.project {
                version VERSION //版本名称 上传是不能和以前的同样，不然上传失败
                artifactId ARTIFACT_ID  //和前面网站上填写的同样
                groupId GROUP_ID  //和前面网站上填写的同样
                packaging TYPE //填写aar
                description DESCRIPTION //更新描述
            }
        }
    }
}

// 进行数字签名
signing {
    // 当 发布版本 & 存在"uploadArchives"任务时，才执行
    required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}